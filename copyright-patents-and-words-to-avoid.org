Various Readings for May 12th

* Free Software Definition
** Free software is a matter of liberty, not price
** The freedoms that the software must provide are
*** The freedom to run the software for any purpose
**** Each user can use the software for whatever purposes they please, but they cannot impose their purposes on others
*** The freedom to study the program to see how it works, and change it however you like
**** You can make changes without notifying anyone or getting permission
**** Tivoization is not acceptable, since it prevents changes from being made in practice
**** Must be able to merge in suitably licenced code
**** Changes cannot be limited to only "improvements"
**** Some rules are okay, if they don't infringe on your ability to produce and distribute modified versions
*** The freedom to redistribute copies to help your neighbor
**** It is okay to charge a fee for redistribution
**** The ability of anyone to redistribute does mean that you cannot ensure every copy is paid for, but you can charge for any copies you provide
**** Must include both binaries and source code
**** Sometimes there are legal restrictions that restrict export - these cannot be conditions on redistribution
*** The freedom to redistribute modified copies (access to the source code is a precondition for this)
**** Obfuscated source code does not count
** Does not require that free software be copylefted
* The Right to Read
** Dan's friend's computer is broken down
** She needs to borrow a computer to finish her midterm project
** But, if Dan lends her his computer, she may read his books, which would be prohibited
** She might not, but if she does, he will get caught
** She may have some temptation to do so
** There are ways to avoid getting caught, but they are also illegal
** Someone he knew had gone to jail for possessing a debugger
** Debuggers were illegal because judges had rules their use in practice was to bypass copyright protection
*** Similar to some arguments against file sharing
** Dan lends her his computer with his password, so his friend can pretend to be him
** This way it will not be detected if he is caught
** But, if she reports him for doing so, both will be banned from the computer system and fail their classes
* Misinterpreting Copyright
** Copyright exists to benefit consumers, not producers
** Copyright is intended to promote the creation of new public domain works
** Interpretations of copyright have shifted to support publishers instead
** Copyright is not a natural right
** Some have argued that copyright "strikes a bargain" between publishers and consumers
*** This disregards that copyright is intended to benefit consumers
*** Copyright is not properly a balance between the interests of publishers and the interests of consumers
*** It should be a balance between the interests of consumers and market forces
*** Since freedom is being spent rather than money, we must be more frugal
*** Alternatively, we can state it as a balance between consumers interests to have maximum freedom over existing works, and consumers interestes to have new works
*** We want to strike a balance, rather than maximizing one or the other
** Media has given a bad rap to copying
*** As a result of this, the main motivation for freedom to copy is excluded from the debate
** Copying has long been a part of literary tradition
** The length of the protected term for copyright is too long to realistically increase the incentive to produce new works
** The reach of copyright has been extended beyond the borders of it's official juristiction (Russian programmer arrested because he made a program in Russia that was legal there)
** Duration is an important consideration
*** Currently it is very long (Mickey Mouse laws)
*** 10 years is suggested
**** Most benefit realized in early years
**** Often out of print by 10
*** It can be different for different forms of artistic works
*** 7 years may be optimal
* Did you say "Intellectual Property"?
** Three separate sets of laws with different intents, lumped under one umbrella
*** Copyright - limited monopoly on copying and redistribution to encourage additional creation of works
*** Patents - limited monopoly on useful ideas to encourage full disclosure
*** Trademarks - monopoly on certain names and symbols to protect consumers from confusion
** The term causes problems because of the analogy to property rights
** Alternative titles have been proposed: I like GOLEMs - Government-Originated Legally Encorced Monopolies
** They have very little in common
* Words to Avoid
** BSD Style
The distinction between permissive licenses is important because they do not all impose the same restrictions. Some permissive licenses are compatible with the GNU GPL but others are not. Compatibility between licenses is an important issue when dealing with modules of FOSS code.
** Closed/Open
The "Free Software" community wishes to avoid pacing itself as diametrically opposed to "closed" software since this puts them in the same position as the "open source" community. Although Open Source and Free Software have many things in common, Free Software focuses more on freedom rather than the benefits to software producers and feels these differences are important. The term "proprietary" is preferred.
** Cloud computing
The term cloud computing is very vague. It loosely refers to a model of computation where operations are performed through cooperating services over the internet. However, this in itself does not describe anything except internal architecture and covers a broad range of internal structures as well.
** Commercial
Like "closed", there are problems with referring to proprietary software as "commercial" software. The problems are two-fold. Firstly, not all proprietary software is commercial. Secondly, there is commercial free or open source software.
** Compensation for Authors
There are problems with using the term compensation for authors. Firstly, it supposes that copyright exists to protect authoers. More importantly, it carries the connotation that using an author's work somehow harms them, and that harm must be "compensated" financially.
** Content
This term can be considered disparaging to the author's works. Although there has been a significant trend toward referring to artistic works as content, "content" implies that it is a commodity used to fill something.
** Creator
Often used in combination with content, as in, "content creator". Some disagree with the term since it elevates authors above the users. The term "author" is suggested instead.
** Digital Goods
By calling them "goods", it implies an association with physical goods which must be manufactured. Because "digital goods" have little in common with physical goods, this term can be misleading.
** Digital Rights Management
The problems with this term lie in it's assumption that publishers have a right to restrict users.
** Ecosystem
The use of this term implies the absence of ethical judgement. Freedoms do not exist within an ecosystem - and the use of coercion or violence can be considered normal.
** For Free/Freeware/Freely Available/Give away software
In English, the terms for free of cost and providing freedom are synonyms. This can lead to confusion if people believe that free software (libre) is the same as software available at no cost. (gratis)
** Hacker
Although a useful term, it has come to be misunderstood as one who breaks security. Because of the potential for confusion, the term should be avoided.
** Intellectual Property
See above.
** LAMP System
This term has the same issue as the use of the term Linux to refer to GNU/Linux based systems - it excludes the GNU project from it's name. Some people consider this a problem but the GNU/Linux name is controversial.
** Market
When applied to free software, it implies that free software is merely attempting to take market share from competitors. It ignores the philosophical underpinnings of free software. It suggests that we are only trying to provide the best or most popular solution rather than provide users freedom.
** MP3 Player
Digital audio players support other formats. Calling them MP3 players gives inappropriate significance to the encumbered MP3 format.
** PC
This term can be problematic because most people assume a "PC" runs Windows. A machine running some other operating system is still a PC.
** Photoshop/PowerPoint
Because Photoshop is the name of a particular proprietary image editing program, the use of this term gives artificial promience to that particular program. PowerPoint has the same problem.
** Piracy/Theft
The use of the term piracy implies ethical equivalence to boarding ships, or more generally, simply stealing. Copying software does not qualify as stealing because stealing requires an intention to permanently deprive another of the thing you steal. Piracy is loaded with a value judgement.
** Protection
The use of the term Protection implies that harm or suffering is being avoided. But in many cases, restrictions called "protection" often cause harm and suffering to end users.
** RAND
RAND is problematic because it stands for reasonable and non-discriminatory, and these licenses can be both unreasonable and discriminatory. Since they are based on a fee per copy, they discriminate against free software.
** Sell software
Technically, there is nothing wrong with the use of the term sell software when what you are doing is actually selling software. However, typical proprietary software is not sold - only a license to use the software under limited circumstances is sold.
** Trusted Computing
Trusted computing can be a misleading term because it is the publishers who trust the computing equipment, not the users.
** Vendor
Some developers are vendors, but many are not. The use of the blanket term vendor to refer to all suppliers of software is misleading for this reason.
* What is Copyleft?
Copyleft is a licensing scheme that uses copyright to ensure that all users of a software have certain freedoms. It differs from permissing licencing schemes in that the freedoms cannot be removed by a middleman. It also prevents an employer of someone who develops a change from claiming ownership over that change. The GNU GPL is a popular copyleft license.
* Copyleft: Pragmatic Idealism
RMS is an idealist. He copylefts his software as an incentive for others to make their software free. If their software is free then they can use his code in their own software, which provides benefit to them. Not everyone has the same motivation. He cites a friend of his who was willing to produce either copylefted or proprietary software, but expected to be paid for developing proprietary software. He used copyleft so that the software he produced for free would not be used in proprietary software, forcing companies to pay him if they wanted to use his software in proprietary products.

The GNU GPL has had the effect of making much software that would have otherwise been proprietary, be released as free software instead. Examples are the GCC C++ and Objective C front ends.

Many proprietary software developers want to be able to use free software in their own products, but they do not want to release their own code under the same terms. They may offer recognition and gratitude instead. Often there is an ego boost for a developer when it is used by many people. However, it does not necessarily benefit the free software movement, or other developers, merely to have the free software used by a lot of people. This is particularly the case if those users do not have the freedoms that free software intends to provide.
* The Danger of Software Patents
** RMS argues that software patents are a misapplication of patent laws
** Wouldn't be a problem if only entire programs are patented
** Patents cost money to get, defend, and fight against
** This makes it hard for free software to deal with patents
** They limit the techniques free software can use
** Their time frame is long considering the pace of software development
** Patents are secret when they are pending, so you can't know when you use a technique whether or not you are infringing
** Patents provide full disclosure - but there are too many to be able to actually read them all
** Patents can be hard to find because they often use terminology different from what a person might search for
** Sometimes patents cover essential features or rule out entire fields
** Many patents cover obvious ideas
** Big companies can cross-license patents, avoiding the hassles of the patent system
** Patent trolls acquire patents and charge high licence fees
*** Since they don't produce any products, they aren't at risk of infringing others so have no incentive to cross-licence
** Other fields have patents but they are more specific
** Software patents have similar issues to business process patents
*** Business process patents aren't patentable anymore
* Microsoft, TomTom and FAT Patents
** Microsoft sues a company which uses a Linux kernel
** The kernel is claimed to violate some of Microsoft's patents
** It will be very expensive for TomTom to defend itself
** Some are very obvious patents
** Some patents are for FAT, a standard which Microsoft has more-or-less forced because it is one of the filesystems that is compatible with Windows
** TomTom eventually settled, leaving the validity of the patents still unchallenged
